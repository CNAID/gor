#
# Gitlab build file for GOR.
#

variables:
  JAVA_BUILDER_IMAGE: nextcode/builderimg-java:latest
  GIT_SUBMODULE_STRATEGY: none
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.caching=true"


stages:
  - build
  - test
  - publish


before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle


build:
  stage: build
  image: "$JAVA_BUILDER_IMAGE"
  script: ./gradlew assemble
  tags:
    - iceland
  only:
    - branches
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - "build"
      - "**/build"
      - ".gradle"


.build_cache:
  extends: build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - "build"
      - "**/build"
      - ".gradle"


.test:
  extends: .build_cache
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  artifacts:
    reports:
      junit:
        - "*/*/*/*/TEST-*.xml"
        - "*/*/*/*/*/TEST-*.xml"


unittest:
  extends: .test
  script: ./gradlew --continue test


slowtest:
  extends: .test
  script: ./gradlew --continue slowTest


integrationtest:
  extends: .test
  script: ./gradlew --continue integrationTest


# This codequality block is needed to work around https://gitlab.com/gitlab-org/gitlab/issues/12274
code_quality:
  stage: test
  #only:
  #  - master
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
    expire_in: 1 week


license_management:
  extends: .build_cache
  stage: test
  only:
    - master
  variables:
    # There is no need to run tests or generate sphinx documentation for license management
    # analysis, however, the license management plugin calls the build task so we have to manually
    # disable tests and documentation generation.
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dskip.tests=true -Dskip.documentation=true"


dependency_scanning:
  stage: test
  # only:
  #  - master
  artifacts:
    paths: [gl-dependency-scanning-report.json]


publish:
  extends: .build_cache
  stage: publish
  only:
    - master
  script: ./gradlew publish -x test -x slowTest -x integrationTest


include:
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Security/License-Management.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
