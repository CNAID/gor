include:
  #- project: wuxi-nextcode/sdev/gitlab-ci-scripts
  #  file: /auto-ci-workflow.yml
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Security/License-Management.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml

image: nextcode/builderimg-java:jdk8

variables:
  #RELEASABLE_BRANCH: master
  #AUTO_DEPLOY_BRANCH: master
  #AUTO_DEPLOY_ENV_REPO: wuxi-nextcode/kube-env/dev/platform-dev-kube-env
  #DOWNSTREAM_KUBE_SUBCHART: sequence-miner
  #DOCKER_HUB_REPO: nextcode/smclient
  #RELEASE_ENV_REPO: wuxi-nextcode/kube-env/customer-kube-env
  GIT_SUBMODULE_STRATEGY: none
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  #GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dskip.documentation=true"
  #AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS: "--build-arg ORG_GRADLE_PROJECT_artifactory_password --build-arg ORG_GRADLE_PROJECT_artifactory_user"
  AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS: --build-arg ORG_GRADLE_PROJECT_artifactory_password=$ORG_GRADLE_PROJECT_artifactory_password --build-arg ORG_GRADLE_PROJECT_artifactory_user=$ORG_GRADLE_PROJECT_artifactory_user
  DOCKER_BUILDKIT: 1


before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle


stages:
  #- pre_build
  - build
  - test
  - checks
  - publish
  #- promote
  #- release
  #- deploy


build:
  stage: build
  #extends: .on-branches
  tags:
    - iceland
 #- gitlab-org
  before_script:
    - ./gradlew -v
  script: ./gradlew --build-cache assemble

  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - "build"
      - "**/build"
      - ".gradle"

unittest:
  stage: test
  #extends: .on-branches
  tags:
    - iceland
 #- gitlab-org
  variables:
    GIT_SUBMODULE_STRATEGY: recursive 
  script: ./gradlew test

  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull #pull-push
    paths:
      - "build"
      - "**/build"
      - ".gradle"

  artifacts:
    reports:
      junit:
        - "*/*/*/*/TEST-*.xml"
        - "*/*/*/*/*/TEST-*.xml"

slowtest:
  stage: test
  #extends: .on-branches
  tags:
    - iceland  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive    
  script: ./gradlew slowTest

  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull #pull-push
    paths:
      - "build"
      - "**/build"
      - ".gradle"

  artifacts:
    reports:
      junit:
        - "*/*/*/*/TEST-*.xml"
        - "*/*/*/*/*/TEST-*.xml"
        
integrationtest:
  stage: test
  #extends: .on-branches
  tags:
    - iceland    
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script: ./gradlew integrationTest

  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull #pull-push
    paths:
      - "build"
      - "**/build"
      - ".gradle"

  artifacts:
    reports:
      junit:
        - "*/*/*/*/TEST-*.xml"
        - "*/*/*/*/*/TEST-*.xml"
        
        
# This codequality block is needed to work around https://gitlab.com/gitlab-org/gitlab/issues/12274
code_quality:
  stage: test
  tags:
  - iceland

  variables:
    GIT_SUBMODULE_STRATEGY: none

  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    
    paths: [gl-code-quality-report.json]
    expire_in: 1 week

license_management:
  stage: test
  tags:
    - iceland

  variables:
    # There is no need to run tests or generate sphinx documentation for license management 
    # analysis, however, the license management plugin calls the build task so we have to manually
    # disable tests and documentation generation.
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dskip.tests=true -Dskip.documentation=true"
    GIT_SUBMODULE_STRATEGY: none

dependency_scanning:
  stage: test
  tags:
    - iceland
  #before_script:
  #  - sh .gitlab/scripts/write_gradle_props.sh
  artifacts:
    paths: [gl-dependency-scanning-report.json]
    
publish:
  stage: publish
  tags:
    - iceland
  script: ./gradlew publish -x test -x slowTest -x integrationTest
  #only:
  #  - master
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - "build"
      - "**/build"
      - ".gradle"
